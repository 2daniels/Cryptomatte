#
#  Copyright Psyop 2014, 2015, all rights reserved. 
#  Shared with the Cryptomatte Committee- please do not redistribute. 
#
#! P:/global/apps/TheFoundry/Nuke/win64/Nuke7.0v10/Nuke7.0.exe -nx
version 7.0 v10
add_layer {uCryptoObject uCryptoObject.red uCryptoObject.green uCryptoObject.blue uCryptoObject.alpha}
add_layer {uCryptoObject00 uCryptoObject00.red uCryptoObject00.green uCryptoObject00.blue uCryptoObject00.alpha}
Gizmo {
 addUserKnob {20 cryptomatte l Cryptomatte}
 addUserKnob {19 ColorKey l "Color Key" t "Use this field to sample a color to select the ID you would like. View the output of this gizmo for keying- it will shuffle the right channels into RGB. The blue channel is the ID channel, the others are just for visual feedback. "}
 ColorKey {0 0 0 0}
 addUserKnob {26 ""}
 addUserKnob {6 matteOnly l "Matte Only" +STARTLINE}
 addUserKnob {6 RemoveChannels l "Remove Channels" t "Removes all non-RGBA channels for the output. This will leave the downstream cleaner. " -STARTLINE}
 RemoveChannels true
 addUserKnob {26 ""}
 addUserKnob {22 clear l "Clear" t "Clears the matte selection of this gizmo" T "try: \n   import cryptomatte_utilities as cu\n   cu.clear_cryptomatte_gizmo(nuke.thisNode())\nexcept Exception, err:\n   import traceback\n   nuke.message('''Unable to run Cryptomatte Gizmo update script. This script is necessary for the Cryptomatte system to work properly. Please check with Pipeline that the Cryptomatte python plugin is available on this project. \n\nError Traceback (send this to Pipeline): \n\n%s''' % traceback.format_exc())" +STARTLINE}
 addUserKnob {22 forceUpdate l "Force Update" t "Updates the Gizmo based on which channels are available in the input. \n\nThis happens automatically when input changes, when loading the nuke script, or when a new gizmo is created. This is how it deals with differently named channels in the different Cryptomatte layers, and different depths that it's possible to render at. " T "try: \n   import cryptomatte_utilities as cu\n   cu.update_cryptomatte_gizmo(nuke.thisNode(), True)\nexcept Exception, err:\n   import traceback\n   nuke.message('''Unable to run Cryptomatte Gizmo update script. This script is necessary for the Cryptomatte system to work properly. Please check with Pipeline that the Cryptomatte python plugin is available on this project. \n\nError Traceback (send this to Pipeline): \n\n%s''' % traceback.format_exc())" -STARTLINE}
 addUserKnob {6 stopAutoUpdate l "Stop Auto Update" t "Stops the automatic update of this copy of the Gizmo." -STARTLINE}
 addUserKnob {6 alwaysUseExpression l "Always Use Expression" t "The gizmo can use either an internal node tree or an expression node to build the matte.\n\nBy default the node tree is used, unless there are more than 12 levels. The expression may be more exact, so this may be worth trying if there are problems. The expression evaluation may, however, be slower. " +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {1 keyedName l "Keyed Name" t "This field is for information only, it's not for selecting things." +OUTPUT_ONLY}
 addUserKnob {26 "" +HIDDEN}
 addUserKnob {6 useExpression +HIDDEN +STARTLINE}
 addUserKnob {41 expression +HIDDEN T Expression_ExpressionMode.expr0}
 addUserKnob {41 previewChannel +HIDDEN T ShuffleCopy_in_keyable.in2}
 addUserKnob {41 in00 +HIDDEN T Shuffle0.in}
 addUserKnob {20 advanced l Advanced}
 addUserKnob {22 unloadManifest l "Unload Manifest (Extract all mattes)" t "Create Cryptomatte Keyer nodes for all mattes available in this pass. " T "try: \n   import cryptomatte_utilities as cu\n   cu.unload_manifest(nuke.thisNode())\nexcept Exception, err:\n   import traceback\n   nuke.message('''Unable to run a Cryptomatte script. This script is necessary for the Cryptomatte system to work properly. Please check with Pipeline that the Cryptomatte python plugin is available on this project. \n\nError Traceback (send this to Pipeline): \n\n%s''' % traceback.format_exc())" +STARTLINE}
 addUserKnob {22 forceUpdateAll l "Force Update All Gizmos in script" t "Forces update on all Crytomatte Keyer gizmos in the Nuke script." T "try: \n   import cryptomatte_utilities as cu\n   cu.update_all_cryptomatte_gizmos()\nexcept Exception, err:\n   import traceback\n   nuke.message('''Unable to run Cryptomatte Gizmo update script. This script is necessary for the Cryptomatte system to work properly. Please check with Pipeline that the Cryptomatte python plugin is available on this project. \n\nError Traceback (send this to Pipeline): \n\n%s''' % traceback.format_exc())" +STARTLINE}
}
 Input {
  inputs 0
  name Input1
  xpos -871
  ypos -486
 }
 Dot {
  name Dot1
  xpos -837
  ypos -384
 }
set N48b79400 [stack 0]
 Dot {
  name Dot7
  xpos -741
  ypos -308
 }
set N48b79770 [stack 0]
 Expression {
  temp_name0 ID
  temp_expr0 parent.ColorKey.b
  channel0 alpha
  expr0 "(uCryptoObject00.green == 1.0 && uCryptoObject00.red != ID) ? 0 : (\nuCryptoObject00.red == ID ? uCryptoObject00.green : (\nuCryptoObject00.blue == ID ? uCryptoObject00.alpha : 0)\n)\n"
  name Expression_ExpressionMode
  xpos -775
  ypos 442
 }
 Dot {
  name Dot3
  xpos -741
  ypos 567
 }
set N48b79e50 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle_toAlpha
  xpos -645
  ypos 714
 }
 Dot {
  name Dot6
  xpos -611
  ypos 840
 }
push $N48b79e50
push $N48b79770
 Shuffle {
  in uCryptoMaterial00
  green black
  blue black
  alpha green
  name Shuffle0
  xpos -645
  ypos -190
 }
push $N48b79400
 ShuffleCopy {
  inputs 2
  in2 uCryptoMaterial
  red blue2
  blue red
  name ShuffleCopy_in_keyable
  xpos -871
  ypos -190
 }
 Dot {
  name Dot5
  xpos -837
  ypos 697
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy2
  xpos -871
  ypos 744
 }
 Dot {
  name Dot2
  xpos -837
  ypos 786
 }
set N48b7b660 [stack 0]
 Grade {
  white {0.25 0.25 1 1}
  black_clamp false
  name visual_feedback_grade
  xpos -916
  ypos 834
 }
push $N48b7b660
 Shuffle {
  red alpha
  green alpha
  blue black
  alpha black
  name visual_feedback_shuffle
  xpos -832
  ypos 810
 }
 Merge2 {
  inputs 2
  operation plus
  name visual_feedback_merge
  xpos -868
  ypos 866
 }
 Switch {
  inputs 2
  which {{parent.matteOnly}}
  name Switch_matte_only
  xpos -663
  ypos 907
 }
set N4c5bedc0 [stack 0]
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos -594
  ypos 957
 }
push $N4c5bedc0
 Switch {
  inputs 2
  which {{parent.RemoveChannels}}
  name Switch_remove_channels
  xpos -663
  ypos 1017
 }
 Output {
  name Output2
  xpos -663
  ypos 1069
 }
end_group
